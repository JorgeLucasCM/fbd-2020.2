/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Main;

import DAO.AlunoDAO;
import DAO.Conexao;
import DAO.EditoraDAO;
import DAO.LivroDAO;
import java.awt.Color;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import static Main.main.identificacao;
import java.sql.Connection;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import model.Aluno;
import model.Editora;
import model.Livro;
import view.*;
import model.*;
import DAO.*;
import java.util.Date;

/**
 *
 * @author Jorge Lucas
 */
public class TelaBibliotecario extends javax.swing.JFrame {

    /**
     * Creates new form TelaBibliotecario
     */
    public TelaBibliotecario() throws SQLException {
        initComponents();
        configurarBemVindo();
        configurarTabelaLivro();
        limparTabelaAluno();
        limparTabelaLivro();
        inserirNaTabelaLivro();
        inserirNaTabelaAluno();
        inserirNaTabelaEditora();
        inserirNaTabelaCategoria();
        inserirNaTabelaObra();
        inserirNaTabelaBibliotecario();
        atualizarSituacao();
        inserirNaTabelaSolicacoes();
        configurarTabelaSituacoes();
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTPSolicitacoes = new javax.swing.JTabbedPane();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTbObra = new javax.swing.JTable();
        jBCadastrarObra = new javax.swing.JButton();
        jBRemoverObra = new javax.swing.JButton();
        jBEditarObra = new javax.swing.JButton();
        jBVisualizarObra = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTbLivros = new javax.swing.JTable();
        jBCadastrar = new javax.swing.JButton();
        jBRemoverLivro = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jBRemoverAluno = new javax.swing.JButton();
        jCBAluno = new javax.swing.JComboBox<>();
        jBCadastrar1 = new javax.swing.JButton();
        jLProcurar1 = new javax.swing.JLabel();
        jBEditarAluno = new javax.swing.JButton();
        jTFProcurarAluno = new javax.swing.JTextField();
        jLLupaAluno = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTbAluno = new javax.swing.JTable();
        jBVisualizarAluno = new javax.swing.JButton();
        jPanel5 = new javax.swing.JPanel();
        jScrollPane5 = new javax.swing.JScrollPane();
        jTbEditora = new javax.swing.JTable();
        jBCadastrarEditora = new javax.swing.JButton();
        jBRemoverEditora = new javax.swing.JButton();
        jBEditarEditora = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        jTbCategoria = new javax.swing.JTable();
        jBCadastrarCategoria = new javax.swing.JButton();
        jBRemoverCategoria = new javax.swing.JButton();
        jBEditarCategoria = new javax.swing.JButton();
        jPanel8 = new javax.swing.JPanel();
        jScrollPane8 = new javax.swing.JScrollPane();
        jTbBibliotecario = new javax.swing.JTable();
        jBCadastrarBibliotecario = new javax.swing.JButton();
        jBRemoverBibliotecario = new javax.swing.JButton();
        jBEditarBibliotecario = new javax.swing.JButton();
        jPanel6 = new javax.swing.JPanel();
        jScrollPane6 = new javax.swing.JScrollPane();
        jTbSolicitacoes = new javax.swing.JTable();
        jBAceitar = new javax.swing.JButton();
        jBRecusar = new javax.swing.JButton();
        jLBemVindo = new javax.swing.JLabel();
        jLSair = new javax.swing.JLabel();
        livroicon = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        jTPSolicitacoes.setBackground(new java.awt.Color(102, 255, 102));

        jPanel3.setBackground(new java.awt.Color(255, 204, 102));

        jTbObra.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Título", "Categoria", "Editora"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane3.setViewportView(jTbObra);

        jBCadastrarObra.setText("Cadastrar");
        jBCadastrarObra.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jBCadastrarObra.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBCadastrarObraActionPerformed(evt);
            }
        });

        jBRemoverObra.setText("Remover");
        jBRemoverObra.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jBRemoverObra.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBRemoverObraActionPerformed(evt);
            }
        });

        jBEditarObra.setText("Editar");
        jBEditarObra.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBEditarObraActionPerformed(evt);
            }
        });

        jBVisualizarObra.setText("Visualizar");
        jBVisualizarObra.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBVisualizarObraActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane3)
                .addContainerGap())
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(71, 71, 71)
                .addComponent(jBRemoverObra)
                .addGap(32, 32, 32)
                .addComponent(jBVisualizarObra)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 39, Short.MAX_VALUE)
                .addComponent(jBEditarObra)
                .addGap(47, 47, 47)
                .addComponent(jBCadastrarObra)
                .addGap(70, 70, 70))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 402, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jBRemoverObra)
                        .addComponent(jBVisualizarObra))
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jBEditarObra)
                        .addComponent(jBCadastrarObra)))
                .addContainerGap(52, Short.MAX_VALUE))
        );

        jTPSolicitacoes.addTab("Obras", jPanel3);

        jPanel1.setBackground(new java.awt.Color(255, 204, 102));

        jTbLivros.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Título", "Descrição", "Qtd"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jTbLivros);

        jBCadastrar.setText("Cadastrar");
        jBCadastrar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jBCadastrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBCadastrarActionPerformed(evt);
            }
        });

        jBRemoverLivro.setText("Remover");
        jBRemoverLivro.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jBRemoverLivro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBRemoverLivroActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 541, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jBRemoverLivro)
                .addGap(49, 49, 49)
                .addComponent(jBCadastrar)
                .addGap(177, 177, 177))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 402, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jBCadastrar)
                    .addComponent(jBRemoverLivro))
                .addContainerGap(52, Short.MAX_VALUE))
        );

        jTPSolicitacoes.addTab("Livros", jPanel1);

        jPanel2.setBackground(new java.awt.Color(255, 204, 102));

        jBRemoverAluno.setText("Remover");
        jBRemoverAluno.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jBRemoverAluno.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBRemoverAlunoActionPerformed(evt);
            }
        });

        jCBAluno.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Selecione ...", "Nome", "Matrícula" }));
        jCBAluno.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCBAlunoActionPerformed(evt);
            }
        });

        jBCadastrar1.setText("Cadastrar");
        jBCadastrar1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jBCadastrar1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBCadastrar1ActionPerformed(evt);
            }
        });

        jLProcurar1.setText("Procurar:");

        jBEditarAluno.setText("Editar");
        jBEditarAluno.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBEditarAlunoActionPerformed(evt);
            }
        });

        jTFProcurarAluno.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTFProcurarAlunoActionPerformed(evt);
            }
        });

        jLLupaAluno.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/lupa.png"))); // NOI18N
        jLLupaAluno.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLLupaAluno.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLLupaAlunoMouseClicked(evt);
            }
        });

        jTbAluno.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Matrícula", "Nome", "Curso"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(jTbAluno);

        jBVisualizarAluno.setText("Visualizar");
        jBVisualizarAluno.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBVisualizarAlunoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jScrollPane2)
                        .addContainerGap())
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLProcurar1)
                        .addGap(18, 18, 18)
                        .addComponent(jTFProcurarAluno, javax.swing.GroupLayout.PREFERRED_SIZE, 305, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLLupaAluno)
                        .addGap(18, 18, 18)
                        .addComponent(jCBAluno, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addGap(63, 63, 63)
                        .addComponent(jBRemoverAluno)
                        .addGap(40, 40, 40)
                        .addComponent(jBVisualizarAluno)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jBEditarAluno)
                        .addGap(47, 47, 47)
                        .addComponent(jBCadastrar1)
                        .addGap(60, 60, 60))))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLProcurar1)
                        .addComponent(jTFProcurarAluno, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jCBAluno)
                    .addComponent(jLLupaAluno, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 351, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jBRemoverAluno)
                    .addComponent(jBEditarAluno)
                    .addComponent(jBCadastrar1)
                    .addComponent(jBVisualizarAluno))
                .addContainerGap(54, Short.MAX_VALUE))
        );

        jTPSolicitacoes.addTab("Aluno", jPanel2);

        jPanel5.setBackground(new java.awt.Color(255, 204, 102));

        jTbEditora.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Nome", "CPNJ", "Cidade"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane5.setViewportView(jTbEditora);

        jBCadastrarEditora.setText("Cadastrar");
        jBCadastrarEditora.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jBCadastrarEditora.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBCadastrarEditoraActionPerformed(evt);
            }
        });

        jBRemoverEditora.setText("Remover");
        jBRemoverEditora.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jBRemoverEditora.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBRemoverEditoraActionPerformed(evt);
            }
        });

        jBEditarEditora.setText("Editar");
        jBEditarEditora.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBEditarEditoraActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane5, javax.swing.GroupLayout.DEFAULT_SIZE, 541, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(71, 71, 71)
                .addComponent(jBRemoverEditora)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jBEditarEditora)
                .addGap(95, 95, 95)
                .addComponent(jBCadastrarEditora)
                .addGap(70, 70, 70))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 402, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jBRemoverEditora)
                    .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jBCadastrarEditora)
                        .addComponent(jBEditarEditora)))
                .addContainerGap(52, Short.MAX_VALUE))
        );

        jTPSolicitacoes.addTab("Editoras", jPanel5);

        jPanel4.setBackground(new java.awt.Color(255, 204, 102));

        jTbCategoria.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Nome"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane4.setViewportView(jTbCategoria);

        jBCadastrarCategoria.setText("Cadastrar");
        jBCadastrarCategoria.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jBCadastrarCategoria.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBCadastrarCategoriaActionPerformed(evt);
            }
        });

        jBRemoverCategoria.setText("Remover");
        jBRemoverCategoria.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jBRemoverCategoria.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBRemoverCategoriaActionPerformed(evt);
            }
        });

        jBEditarCategoria.setText("Editar");
        jBEditarCategoria.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBEditarCategoriaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 541, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(71, 71, 71)
                .addComponent(jBRemoverCategoria)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jBEditarCategoria)
                .addGap(95, 95, 95)
                .addComponent(jBCadastrarCategoria)
                .addGap(70, 70, 70))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 402, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jBRemoverCategoria)
                    .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jBCadastrarCategoria)
                        .addComponent(jBEditarCategoria)))
                .addContainerGap(52, Short.MAX_VALUE))
        );

        jTPSolicitacoes.addTab("Categorias", jPanel4);

        jPanel8.setBackground(new java.awt.Color(255, 204, 102));

        jTbBibliotecario.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Nome", "Login"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane8.setViewportView(jTbBibliotecario);

        jBCadastrarBibliotecario.setText("Cadastrar");
        jBCadastrarBibliotecario.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jBCadastrarBibliotecario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBCadastrarBibliotecarioActionPerformed(evt);
            }
        });

        jBRemoverBibliotecario.setText("Remover");
        jBRemoverBibliotecario.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jBRemoverBibliotecario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBRemoverBibliotecarioActionPerformed(evt);
            }
        });

        jBEditarBibliotecario.setText("Editar");
        jBEditarBibliotecario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBEditarBibliotecarioActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane8, javax.swing.GroupLayout.DEFAULT_SIZE, 541, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addGap(71, 71, 71)
                .addComponent(jBRemoverBibliotecario)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jBEditarBibliotecario)
                .addGap(95, 95, 95)
                .addComponent(jBCadastrarBibliotecario)
                .addGap(70, 70, 70))
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane8, javax.swing.GroupLayout.PREFERRED_SIZE, 402, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jBRemoverBibliotecario)
                    .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jBCadastrarBibliotecario)
                        .addComponent(jBEditarBibliotecario)))
                .addContainerGap(52, Short.MAX_VALUE))
        );

        jTPSolicitacoes.addTab("Bibliotecario", jPanel8);

        jPanel6.setBackground(new java.awt.Color(255, 204, 102));

        jTbSolicitacoes.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Id", "Obra", "Livro", "Aluno"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.Integer.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane6.setViewportView(jTbSolicitacoes);

        jBAceitar.setText("Aceitar");
        jBAceitar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jBAceitar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBAceitarActionPerformed(evt);
            }
        });

        jBRecusar.setText("Recusar");
        jBRecusar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jBRecusar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBRecusarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane6, javax.swing.GroupLayout.DEFAULT_SIZE, 541, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGap(168, 168, 168)
                .addComponent(jBRecusar)
                .addGap(87, 87, 87)
                .addComponent(jBAceitar)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 402, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jBAceitar)
                    .addComponent(jBRecusar))
                .addContainerGap(52, Short.MAX_VALUE))
        );

        jTPSolicitacoes.addTab("Solicitações", jPanel6);

        jLBemVindo.setBackground(new java.awt.Color(255, 204, 102));
        jLBemVindo.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLBemVindo.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLBemVindo.setText("Olá Bibliotecario(a) ");
        jLBemVindo.setBorder(javax.swing.BorderFactory.createEtchedBorder(new java.awt.Color(255, 204, 102), new java.awt.Color(255, 204, 102)));

        jLSair.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLSair.setText("Sair");
        jLSair.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jLSair.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLSair.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLSairMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jLSairMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jLSairMouseExited(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                jLSairMouseReleased(evt);
            }
        });

        livroicon.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/open-book.png"))); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTPSolicitacoes)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(livroicon)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(96, 96, 96)
                        .addComponent(jLBemVindo, javax.swing.GroupLayout.PREFERRED_SIZE, 224, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(188, 188, 188)
                        .addComponent(jLSair, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLBemVindo, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLSair, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(livroicon, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(9, 9, 9)))
                .addGap(1, 1, 1)
                .addComponent(jTPSolicitacoes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void configurarTabelaSituacoes(){
  
        jTbSolicitacoes.getColumnModel().getColumn(0).setPreferredWidth(50);
        jTbSolicitacoes.getColumnModel().getColumn(1).setPreferredWidth(400);
        jTbSolicitacoes.getColumnModel().getColumn(2).setPreferredWidth(50);
        jTbSolicitacoes.getColumnModel().getColumn(3).setPreferredWidth(100);
       
    
    }
    
    private void inserirNaTabelaSolicacoes() throws SQLException{
        Connection con = Conexao.AbrirConexao();
        EmprestimoDAO bd = new EmprestimoDAO(con);
        List<Emprestimo> lista = new ArrayList<>();
        lista = bd.listarEmprestimoPendente();
        DefaultTableModel tbm=
                    (DefaultTableModel) jTbSolicitacoes.getModel();
        while(tbm.getRowCount() > 0 ){
            tbm.removeRow(0);
        }
        
        int i=0;
        for(Emprestimo tab : lista){
            Livro l = new LivroDAO(con).receberLivro(tab.getLivro());
            String titutloObra = new ObraDAO(con).receberTituloObra(l.getObra());
            tbm.addRow(new String[i]);
            jTbSolicitacoes.setValueAt(tab.getId_emprestimo(), i, 0);
            jTbSolicitacoes.setValueAt(titutloObra,i, 1);
            jTbSolicitacoes.setValueAt(tab.getLivro(), i, 2);
            jTbSolicitacoes.setValueAt(tab.getAluno(), i, 3);
            i++;
        }
        Conexao.FehcarConexao(con);
    }
    
    private void atualizarSituacao() throws SQLException{
        Connection con = Conexao.AbrirConexao();
        int qtd = new LivroDAO(con).receberLivrosPedentes();
        
        jTPSolicitacoes.setTitleAt(6,"Solicitaçoes ("+qtd+")");

        
    }
    
    
    private void configurarTabelaLivro(){
  
        jTbLivros.getColumnModel().getColumn(0).setPreferredWidth(100);
        jTbLivros.getColumnModel().getColumn(1).setPreferredWidth(300);
        jTbLivros.getColumnModel().getColumn(2).setPreferredWidth(25);
        
        jTbBibliotecario.getColumnModel().getColumn(0).setPreferredWidth(50);
        jTbBibliotecario.getColumnModel().getColumn(1).setPreferredWidth(275);
        jTbBibliotecario.getColumnModel().getColumn(2).setPreferredWidth(275);
       
      
        jTbAluno.getColumnModel().getColumn(0).setPreferredWidth(100);
        jTbAluno.getColumnModel().getColumn(1).setPreferredWidth(250);
        jTbAluno.getColumnModel().getColumn(2).setPreferredWidth(250);
    
    }
    private void inserirNaTabelaAlunoCom() throws SQLException{
        Connection con = Conexao.AbrirConexao();
        AlunoDAO bd = new AlunoDAO(con);
        List<Aluno> lista = new ArrayList<>();

        if(jCBAluno.getSelectedItem().equals("Nome"))
            lista = bd.pesquisarNomeAluno(jTFProcurarAluno.getText());
        else if (jCBAluno.getSelectedItem().equals("Matrícula"))
            lista = bd.pesquisarMatriculaAluno(Integer.parseInt(jTFProcurarAluno.getText()));

        DefaultTableModel tbm = (DefaultTableModel) jTbAluno.getModel();
        while(tbm.getRowCount() > 0 ){
            tbm.removeRow(0);
        }

        int i=0;
        for(Aluno tab : lista){
            tbm.addRow(new String[i]);
            jTbAluno.setValueAt(tab.getMatricula(), i, 0);
            jTbAluno.setValueAt(tab.getNome(), i, 1);
            jTbAluno.setValueAt(tab.getCurso(), i, 2);
            i++;
        }
        
        Conexao.FehcarConexao(con);
    }
    
 
    private void inserirNaTabelaLivroCom() throws SQLException{
        
    }
    
    private void inserirNaTabelaObra() throws SQLException{
        Connection con = Conexao.AbrirConexao();
        ObraDAO bd = new ObraDAO(con);
        List<Obra> lista = new ArrayList<>();
        lista = bd.listarObra();
        DefaultTableModel tbm=
                    (DefaultTableModel) jTbObra.getModel();
        while(tbm.getRowCount() > 0 ){
            tbm.removeRow(0);
        }
        int i=0;
        for(Obra tab : lista){
            tbm.addRow(new String[i]);
            jTbObra.setValueAt(tab.getTitulo(), i, 0);
            jTbObra.setValueAt(new CategoriaDAO(con).receberNomeCategoria(tab.getCategoria()), i, 1);
            jTbObra.setValueAt(new EditoraDAO(con).receberNomeEditora(tab.getEditora()), i, 2);
            i++;
        }
        Conexao.FehcarConexao(con);
    }
     
    private void inserirNaTabelaBibliotecario() throws SQLException{
        Connection con = Conexao.AbrirConexao();
        BibliotecarioDAO bd = new BibliotecarioDAO(con);
        List<Bibliotecario> lista = new ArrayList<>();
        lista = bd.listarBibliotecario();
        DefaultTableModel tbm=
                    (DefaultTableModel) jTbBibliotecario.getModel();
        while(tbm.getRowCount() > 0 ){
            tbm.removeRow(0);
        }
        int i=0;
        for(Bibliotecario tab : lista){
            tbm.addRow(new String[i]);
            jTbBibliotecario.setValueAt(tab.getId_bibliotecario(), i, 0);
            jTbBibliotecario.setValueAt(tab.getNome(), i, 1);
            jTbBibliotecario.setValueAt(tab.getLogin(), i, 2);
            i++;
        }
        Conexao.FehcarConexao(con);
    }
    
    
    private void inserirNaTabelaAluno() throws SQLException{
        Connection con = Conexao.AbrirConexao();
        AlunoDAO bd = new AlunoDAO(con);
        List<Aluno> lista = new ArrayList<>();
        lista = bd.listarAluno();
        DefaultTableModel tbm=
                    (DefaultTableModel) jTbAluno.getModel();
        while(tbm.getRowCount() > 0 ){
            tbm.removeRow(0);
        }
        int i=0;
        for(Aluno tab : lista){
            tbm.addRow(new String[i]);
            jTbAluno.setValueAt(tab.getMatricula(), i, 0);
            jTbAluno.setValueAt(tab.getNome(), i, 1);
            jTbAluno.setValueAt(tab.getCurso(), i, 2);
            i++;
        }
        Conexao.FehcarConexao(con);
    }
    
    private void inserirNaTabelaEditora() throws SQLException{
        Connection con = Conexao.AbrirConexao();
        EditoraDAO bd = new EditoraDAO(con);
        List<Editora> lista = new ArrayList<>();
        lista = bd.listarEditora();
        DefaultTableModel tbm=
                    (DefaultTableModel) jTbEditora.getModel();
        while(tbm.getRowCount() > 0 ){
            tbm.removeRow(0);
        }
        int i=0;
        for(Editora tab : lista){
            tbm.addRow(new String[i]);
            jTbEditora.setValueAt(tab.getNome(), i, 0);
            jTbEditora.setValueAt(tab.getCnpj(), i, 1);
            jTbEditora.setValueAt(tab.getCidade(), i, 2);
            i++;
        }
        Conexao.FehcarConexao(con);
    }
    
    private void inserirNaTabelaCategoria() throws SQLException{
        Connection con = Conexao.AbrirConexao();
        CategoriaDAO bd = new CategoriaDAO(con);
        List<Categoria> lista = new ArrayList<>();
        lista = bd.listarCategoria();
        DefaultTableModel tbm=
                    (DefaultTableModel) jTbCategoria.getModel();
        while(tbm.getRowCount() > 0 ){
            tbm.removeRow(0);
        }
        int i=0;
        for(Categoria tab : lista){
            tbm.addRow(new String[i]);
            jTbCategoria.setValueAt(tab.getNome(), i, 0);
            i++;
        }
        Conexao.FehcarConexao(con);
    }
    
    private void inserirNaTabelaLivro() throws SQLException{
        Connection con = Conexao.AbrirConexao();
        ObraDAO bd = new ObraDAO(con);
        List<Obra> lista = new ArrayList<>();
        lista = bd.listarObra();
        DefaultTableModel tbm=
                    (DefaultTableModel) jTbLivros.getModel();
        while(tbm.getRowCount() > 0 ){
            tbm.removeRow(0);
        }
        int i=0;
        
        for(Obra tab : lista){
            if(new LivroDAO(con).quantidadeLivroDispObra(tab.getId_obra()) > 0){
                tbm.addRow(new String[i]);
                jTbLivros.setValueAt(tab.getTitulo(), i, 0);
                jTbLivros.setValueAt(tab.getDescricaoDaObra(),i, 1);
                jTbLivros.setValueAt(new LivroDAO(con).quantidadeLivroDispObra(tab.getId_obra()), i, 2);
                i++;
            }else{
                continue;
            }
        }
        Conexao.FehcarConexao(con);
        
    }
    
    private void limparTabelaAluno(){
        DefaultTableModel tabela = (DefaultTableModel) jTbAluno.getModel();
        tabela.setNumRows(0);
    }
    
    private void limparTabelaLivro(){
        DefaultTableModel tabela = (DefaultTableModel) jTbLivros.getModel();
        tabela.setNumRows(0);
    }
    private void configurarBemVindo(){
        jLBemVindo.setText(""+jLBemVindo.getText()+identificacao+"");
    }
    private void jLSairMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLSairMouseReleased

    }//GEN-LAST:event_jLSairMouseReleased

    private void jLSairMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLSairMouseEntered
        jLSair.setForeground(Color.blue);
        jLSair.setText("<html><u>Sair</u>");
    }//GEN-LAST:event_jLSairMouseEntered

    private void jLSairMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLSairMouseExited
        jLSair.setForeground(Color.black);
        jLSair.setText("Sair");
    }//GEN-LAST:event_jLSairMouseExited

    private void jLSairMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLSairMouseClicked
        new telaLogin().setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jLSairMouseClicked

    private void jBCadastrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBCadastrarActionPerformed
        try {
            new CadastroLivro().setVisible(true);
        } catch (SQLException ex) {
            Logger.getLogger(TelaBibliotecario.class.getName()).log(Level.SEVERE, null, ex);
        }
        this.dispose();
    }//GEN-LAST:event_jBCadastrarActionPerformed

    private void jBRemoverLivroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBRemoverLivroActionPerformed
        if(jTbLivros.getSelectedRowCount() == 0)
            JOptionPane.showMessageDialog(null, "Selecione uma linha",null,JOptionPane.ERROR_MESSAGE);
        else if(jTbLivros.getSelectedRowCount() > 1)
            JOptionPane.showMessageDialog(null, "Selecione apenas uma linha",null,JOptionPane.ERROR_MESSAGE);
        else{
            int qtd = Integer.parseInt( JOptionPane.showInputDialog(null, "Insira a quantidade de livros para remover", "Remover livros", 3));
            if(qtd > 0){
                Connection con = Conexao.AbrirConexao();
                try {
                    int obra = new ObraDAO(con).receberIdObra((String)jTbLivros.getValueAt(jTbLivros.getSelectedRow(), 0));
                    new LivroDAO(con).removerLivrosQuantidade(obra, qtd);
                    JOptionPane.showMessageDialog(null, "Livros removidos com sucesso.");
                    inserirNaTabelaLivro();
                 } catch (SQLException ex) {
                    Logger.getLogger(TelaBibliotecario.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        }
    }//GEN-LAST:event_jBRemoverLivroActionPerformed

    private void jBCadastrar1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBCadastrar1ActionPerformed
        new CadastroAluno().setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jBCadastrar1ActionPerformed

    private void jBRemoverAlunoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBRemoverAlunoActionPerformed
        if(jTbAluno.getSelectedRowCount() == 0)
            JOptionPane.showMessageDialog(null, "Selecione uma linha",null,JOptionPane.ERROR_MESSAGE);
        else if(jTbAluno.getSelectedRowCount() > 1)
            JOptionPane.showMessageDialog(null, "Selecione apenas uma linha",null,JOptionPane.ERROR_MESSAGE);
        else{
            if(JOptionPane.showConfirmDialog(null,"Deseja remover o aluno "+jTbAluno.getValueAt(jTbAluno.getSelectedRow(), 1)+" ?") == 0){
                Connection con = Conexao.AbrirConexao();
                try {
                    new AlunoDAO(con).removerAluno((Integer)jTbAluno.getValueAt(jTbAluno.getSelectedRow(), 0));
                JOptionPane.showMessageDialog(null, "Aluno removido com sucesso.");
                limparTabelaAluno();
                inserirNaTabelaAluno();
                 } catch (SQLException ex) {
                    Logger.getLogger(TelaBibliotecario.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        }
    }//GEN-LAST:event_jBRemoverAlunoActionPerformed

    private void jLLupaAlunoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLLupaAlunoMouseClicked
        limparTabelaAluno();
        try {
            
            if(jTFProcurarAluno.getText().equals(""))

                    inserirNaTabelaAluno();

            else if(jCBAluno.getSelectedItem().equals("Selecione ...")){
                JOptionPane.showMessageDialog(null, "Selecione uma opção",null,JOptionPane.ERROR_MESSAGE);
                inserirNaTabelaAluno();
            }else
                    inserirNaTabelaAlunoCom();
            
            
        } catch (SQLException ex) {
            Logger.getLogger(TelaBibliotecario.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jLLupaAlunoMouseClicked

    private void jBEditarAlunoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBEditarAlunoActionPerformed
        if(jTbAluno.getSelectedRowCount() == 0)
            JOptionPane.showMessageDialog(null, "Selecione uma linha",null,JOptionPane.ERROR_MESSAGE);
        else if(jTbAluno.getSelectedRowCount() > 1)
            JOptionPane.showMessageDialog(null, "Selecione apenas uma linha",null,JOptionPane.ERROR_MESSAGE);
        else{
            Connection con = Conexao.AbrirConexao();
            try {
                main.alunoEditar = new AlunoDAO(con).receberAluno((Integer)jTbAluno.getValueAt(jTbAluno.getSelectedRow(), 0));
            } catch (SQLException ex) {
                Logger.getLogger(TelaBibliotecario.class.getName()).log(Level.SEVERE, null, ex);
            }
            new EditarAluno().setVisible(true);
            this.dispose();
        }  

        
    }//GEN-LAST:event_jBEditarAlunoActionPerformed

    private void jTFProcurarAlunoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTFProcurarAlunoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTFProcurarAlunoActionPerformed

    private void jCBAlunoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCBAlunoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jCBAlunoActionPerformed

    private void jBVisualizarAlunoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBVisualizarAlunoActionPerformed
        if(jTbAluno.getSelectedRowCount() == 0)
            JOptionPane.showMessageDialog(null, "Selecione uma linha",null,JOptionPane.ERROR_MESSAGE);
        else if(jTbAluno.getSelectedRowCount() > 1)
            JOptionPane.showMessageDialog(null, "Selecione apenas uma linha",null,JOptionPane.ERROR_MESSAGE);
        else{
             Connection con = Conexao.AbrirConexao();
            try {
                main.alunoEditar = new AlunoDAO(con).receberAluno((Integer)jTbAluno.getValueAt(jTbAluno.getSelectedRow(), 0));
            } catch (SQLException ex) {
                Logger.getLogger(TelaBibliotecario.class.getName()).log(Level.SEVERE, null, ex);
            }
            try {
                new VisualizarAluno().setVisible(true);
            } catch (SQLException ex) {
                Logger.getLogger(TelaBibliotecario.class.getName()).log(Level.SEVERE, null, ex);
            }
            this.dispose();
        }
    }//GEN-LAST:event_jBVisualizarAlunoActionPerformed

    private void jBCadastrarObraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBCadastrarObraActionPerformed
        try {
            new CadastroObra().setVisible(true);
        } catch (SQLException ex) {
            Logger.getLogger(TelaBibliotecario.class.getName()).log(Level.SEVERE, null, ex);
        }
        this.dispose();
    }//GEN-LAST:event_jBCadastrarObraActionPerformed

    private void jBRemoverObraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBRemoverObraActionPerformed
        if(jTbObra.getSelectedRowCount() == 0)
            JOptionPane.showMessageDialog(null, "Selecione uma linha",null,JOptionPane.ERROR_MESSAGE);
        else if(jTbObra.getSelectedRowCount() > 1)
            JOptionPane.showMessageDialog(null, "Selecione apenas uma linha",null,JOptionPane.ERROR_MESSAGE);
        else{
            if(JOptionPane.showConfirmDialog(null,"Deseja remover a Obra "+jTbObra.getValueAt(jTbObra.getSelectedRow(), 0)+" ?") == 0){
                Connection con = Conexao.AbrirConexao();
                try {
                int id_categoria = new CategoriaDAO(con).receberIdCategoria((String)jTbObra.getValueAt(jTbObra.getSelectedRow(), 1));
                int id_editora = new EditoraDAO(con).receberIdEditora((String)jTbObra.getValueAt(jTbObra.getSelectedRow(), 2));
                    new ObraDAO(con).removerObra((String)jTbObra.getValueAt(jTbObra.getSelectedRow(), 0), id_categoria, id_editora);
                JOptionPane.showMessageDialog(null, "Obra removida com sucesso.");
                inserirNaTabelaObra();
                 } catch (SQLException ex) {
                    Logger.getLogger(TelaBibliotecario.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        }
    }//GEN-LAST:event_jBRemoverObraActionPerformed

    private void jBEditarObraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBEditarObraActionPerformed
       if(jTbObra.getSelectedRowCount() == 0)
            JOptionPane.showMessageDialog(null, "Selecione uma linha",null,JOptionPane.ERROR_MESSAGE);
        else if(jTbObra.getSelectedRowCount() > 1)
            JOptionPane.showMessageDialog(null, "Selecione apenas uma linha",null,JOptionPane.ERROR_MESSAGE);
        else{
            Connection con = Conexao.AbrirConexao();
            try {
                int id_categoria = new CategoriaDAO(con).receberIdCategoria((String)jTbObra.getValueAt(jTbObra.getSelectedRow(), 1));
                int id_editora = new EditoraDAO(con).receberIdEditora((String)jTbObra.getValueAt(jTbObra.getSelectedRow(), 2));
                main.obraEditar = new ObraDAO(con).receberObra((String)jTbObra.getValueAt(jTbObra.getSelectedRow(), 0),id_categoria,id_editora);
                new EditarObra().setVisible(true);
                this.dispose();
            } catch (SQLException ex) {
                Logger.getLogger(TelaBibliotecario.class.getName()).log(Level.SEVERE, null, ex);
            }
            
        }
    }//GEN-LAST:event_jBEditarObraActionPerformed

    private void jBVisualizarObraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBVisualizarObraActionPerformed
        if(jTbObra.getSelectedRowCount() == 0)
            JOptionPane.showMessageDialog(null, "Selecione uma linha",null,JOptionPane.ERROR_MESSAGE);
        else if(jTbObra.getSelectedRowCount() > 1)
            JOptionPane.showMessageDialog(null, "Selecione apenas uma linha",null,JOptionPane.ERROR_MESSAGE);
        else{
            Connection con = Conexao.AbrirConexao();
            try {
                int id_categoria = new CategoriaDAO(con).receberIdCategoria((String)jTbObra.getValueAt(jTbObra.getSelectedRow(), 1));
                int id_editora = new EditoraDAO(con).receberIdEditora((String)jTbObra.getValueAt(jTbObra.getSelectedRow(), 2));
                main.obraEditar = new ObraDAO(con).receberObra((String)jTbObra.getValueAt(jTbObra.getSelectedRow(), 0),id_categoria,id_editora);
                new VisualizarObra().setVisible(true);
                this.dispose();
            } catch (SQLException ex) {
                Logger.getLogger(TelaBibliotecario.class.getName()).log(Level.SEVERE, null, ex);
            }
            
        }
    }//GEN-LAST:event_jBVisualizarObraActionPerformed

    private void jBCadastrarCategoriaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBCadastrarCategoriaActionPerformed
        new CadastroCategoria().setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jBCadastrarCategoriaActionPerformed

    private void jBRemoverCategoriaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBRemoverCategoriaActionPerformed
        if(jTbCategoria.getSelectedRowCount() == 0)
            JOptionPane.showMessageDialog(null, "Selecione uma linha",null,JOptionPane.ERROR_MESSAGE);
        else if(jTbCategoria.getSelectedRowCount() > 1)
            JOptionPane.showMessageDialog(null, "Selecione apenas uma linha",null,JOptionPane.ERROR_MESSAGE);
        else{
                if(JOptionPane.showConfirmDialog(null,"Deseja remover a Categoria "+jTbCategoria.getValueAt(jTbCategoria.getSelectedRow(), 0)+" ?") == 0){
                Connection con = Conexao.AbrirConexao();
                try {
                    new CategoriaDAO(con).removerCategoria((String)jTbCategoria.getValueAt(jTbCategoria.getSelectedRow(), 0));
                JOptionPane.showMessageDialog(null, "Categoria removida com sucesso.");
                inserirNaTabelaCategoria();
                 } catch (SQLException ex) {
                    Logger.getLogger(TelaBibliotecario.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        }
    }//GEN-LAST:event_jBRemoverCategoriaActionPerformed

    private void jBEditarCategoriaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBEditarCategoriaActionPerformed
        if(jTbCategoria.getSelectedRowCount() == 0)
            JOptionPane.showMessageDialog(null, "Selecione uma linha",null,JOptionPane.ERROR_MESSAGE);
        else if(jTbCategoria.getSelectedRowCount() > 1)
            JOptionPane.showMessageDialog(null, "Selecione apenas uma linha",null,JOptionPane.ERROR_MESSAGE);
        else{
            Connection con = Conexao.AbrirConexao();
            try {
                main.categoriaEditar = new CategoriaDAO(con).receberCategoria((String)jTbCategoria.getValueAt(jTbCategoria.getSelectedRow(), 0));
            } catch (SQLException ex) {
                Logger.getLogger(TelaBibliotecario.class.getName()).log(Level.SEVERE, null, ex);
            }
            new EditarCategoria().setVisible(true);
            this.dispose();
        } 
    }//GEN-LAST:event_jBEditarCategoriaActionPerformed

    private void jBCadastrarEditoraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBCadastrarEditoraActionPerformed
        new CadastroEditora().setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jBCadastrarEditoraActionPerformed

    private void jBRemoverEditoraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBRemoverEditoraActionPerformed
        if(jTbEditora.getSelectedRowCount() == 0)
            JOptionPane.showMessageDialog(null, "Selecione uma linha",null,JOptionPane.ERROR_MESSAGE);
        else if(jTbEditora.getSelectedRowCount() > 1)
            JOptionPane.showMessageDialog(null, "Selecione apenas uma linha",null,JOptionPane.ERROR_MESSAGE);
        else{
                if(JOptionPane.showConfirmDialog(null,"Deseja remover a Editora "+jTbEditora.getValueAt(jTbEditora.getSelectedRow(), 0)+" ?") == 0){
                Connection con = Conexao.AbrirConexao();
                try {
                    new EditoraDAO(con).removerEditora((String)jTbEditora.getValueAt(jTbEditora.getSelectedRow(), 0), (String)jTbEditora.getValueAt(jTbEditora.getSelectedRow(), 1));
                JOptionPane.showMessageDialog(null, "Editora removida com sucesso.");
                inserirNaTabelaEditora();
                 } catch (SQLException ex) {
                    Logger.getLogger(TelaBibliotecario.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        }
    }//GEN-LAST:event_jBRemoverEditoraActionPerformed

    private void jBEditarEditoraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBEditarEditoraActionPerformed
        if(jTbEditora.getSelectedRowCount() == 0)
            JOptionPane.showMessageDialog(null, "Selecione uma linha",null,JOptionPane.ERROR_MESSAGE);
        else if(jTbEditora.getSelectedRowCount() > 1)
            JOptionPane.showMessageDialog(null, "Selecione apenas uma linha",null,JOptionPane.ERROR_MESSAGE);
        else{
            Connection con = Conexao.AbrirConexao();
            try {
                main.editoraEditar = new EditoraDAO(con).receberEditora((String)jTbEditora.getValueAt(jTbEditora.getSelectedRow(), 0), (String)jTbEditora.getValueAt(jTbEditora.getSelectedRow(), 1));
            } catch (SQLException ex) {
                Logger.getLogger(TelaBibliotecario.class.getName()).log(Level.SEVERE, null, ex);
            }
            new EditarEditora().setVisible(true);
            this.dispose();
        } 
    }//GEN-LAST:event_jBEditarEditoraActionPerformed

    private void jBAceitarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBAceitarActionPerformed
        if(jTbSolicitacoes.getSelectedRowCount() == 0)
            JOptionPane.showMessageDialog(null, "Selecione uma linha",null,JOptionPane.ERROR_MESSAGE);
        else if(jTbSolicitacoes.getSelectedRowCount() > 1)
            JOptionPane.showMessageDialog(null, "Selecione apenas uma linha",null,JOptionPane.ERROR_MESSAGE);
        else{
            Connection con = Conexao.AbrirConexao();
            
             try {
                 Emprestimo e = new EmprestimoDAO(con).receberEmprestimo((Integer)jTbSolicitacoes.getValueAt(jTbSolicitacoes.getSelectedRow(), 0));
                 e.setBibliotecario(main.bibLogado.getId_bibliotecario());
              
                 e.setDataInicio(new Date());
                 Date data = new Date();
                 long diasEmTime = 86400000;
                 data.setTime(data.getTime() + (15*diasEmTime));
                 e.setDataTermino(data);
                 new LivroDAO(con).atualizarSituacao(e.getLivro(), "alugado");
                 
                 new EmprestimoDAO(con).alterarEmprestimo(e);
                 
                 inserirNaTabelaSolicacoes();
                 atualizarSituacao();
                 
             
             
             } catch (SQLException ex) {
                 Logger.getLogger(TelaBibliotecario.class.getName()).log(Level.SEVERE, null, ex);
             }
        }
    }//GEN-LAST:event_jBAceitarActionPerformed

    private void jBRecusarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBRecusarActionPerformed
         if(jTbSolicitacoes.getSelectedRowCount() == 0)
            JOptionPane.showMessageDialog(null, "Selecione uma linha",null,JOptionPane.ERROR_MESSAGE);
        else if(jTbSolicitacoes.getSelectedRowCount() > 1)
            JOptionPane.showMessageDialog(null, "Selecione apenas uma linha",null,JOptionPane.ERROR_MESSAGE);
        else{
            if(JOptionPane.showConfirmDialog(null,"Deseja recusar esse emprestimo ?") == 0){
                Connection con = Conexao.AbrirConexao();
                try {
                    new LivroDAO(con).atualizarSituacao((Integer)jTbSolicitacoes.getValueAt(jTbSolicitacoes.getSelectedRow(), 2), "disponivel");
                    new EmprestimoDAO(con).removerEmprestimo((Integer)jTbSolicitacoes.getValueAt(jTbSolicitacoes.getSelectedRow(), 0));
                    JOptionPane.showMessageDialog(null, "Emprestimo recusado com sucesso.");
                    inserirNaTabelaSolicacoes();
                    atualizarSituacao();
                 } catch (SQLException ex) {
                    Logger.getLogger(TelaBibliotecario.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
          
        }
    }//GEN-LAST:event_jBRecusarActionPerformed

    private void jBEditarBibliotecarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBEditarBibliotecarioActionPerformed
        if(jTbBibliotecario.getSelectedRowCount() == 0)
            JOptionPane.showMessageDialog(null, "Selecione uma linha",null,JOptionPane.ERROR_MESSAGE);
        else if(jTbBibliotecario.getSelectedRowCount() > 1)
            JOptionPane.showMessageDialog(null, "Selecione apenas uma linha",null,JOptionPane.ERROR_MESSAGE);
        else{
            Connection con = Conexao.AbrirConexao();
            try {
                main.bibliotecarioEditar = new BibliotecarioDAO(con).receberBibliotecario((Integer)jTbBibliotecario.getValueAt(jTbBibliotecario.getSelectedRow(), 0));
            } catch (SQLException ex) {
                Logger.getLogger(TelaBibliotecario.class.getName()).log(Level.SEVERE, null, ex);
            }
            new EditarBibliotecario().setVisible(true);
            this.dispose();
        } 
    }//GEN-LAST:event_jBEditarBibliotecarioActionPerformed

    private void jBRemoverBibliotecarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBRemoverBibliotecarioActionPerformed
        if(jTbBibliotecario.getSelectedRowCount() == 0)
            JOptionPane.showMessageDialog(null, "Selecione uma linha",null,JOptionPane.ERROR_MESSAGE);
        else if(jTbBibliotecario.getSelectedRowCount() > 1)
            JOptionPane.showMessageDialog(null, "Selecione apenas uma linha",null,JOptionPane.ERROR_MESSAGE);
        else if(main.bibLogado.getId_bibliotecario() == (Integer)jTbBibliotecario.getValueAt(jTbBibliotecario.getSelectedRow(), 0))
            JOptionPane.showMessageDialog(null, "Não pode remover o Bibliotecario que está logado!",null,JOptionPane.ERROR_MESSAGE);  
        else{
            if(JOptionPane.showConfirmDialog(null,"Deseja remover o Bibliotecario "+jTbBibliotecario.getValueAt(jTbBibliotecario.getSelectedRow(), 1)+" ?") == 0){
                Connection con = Conexao.AbrirConexao();
                try {
                    new BibliotecarioDAO(con).removerBibliotecario((Integer)jTbBibliotecario.getValueAt(jTbBibliotecario.getSelectedRow(), 0));
                JOptionPane.showMessageDialog(null, "Bibliotecario removido com sucesso.");
                inserirNaTabelaBibliotecario();
                 } catch (SQLException ex) {
                    Logger.getLogger(TelaBibliotecario.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        }
    }//GEN-LAST:event_jBRemoverBibliotecarioActionPerformed

    private void jBCadastrarBibliotecarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBCadastrarBibliotecarioActionPerformed
        new CadastroBibliotecario().setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jBCadastrarBibliotecarioActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TelaBibliotecario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TelaBibliotecario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TelaBibliotecario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TelaBibliotecario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new TelaBibliotecario().setVisible(true);
                } catch (SQLException ex) {
                    Logger.getLogger(TelaBibliotecario.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jBAceitar;
    private javax.swing.JButton jBCadastrar;
    private javax.swing.JButton jBCadastrar1;
    private javax.swing.JButton jBCadastrarBibliotecario;
    private javax.swing.JButton jBCadastrarCategoria;
    private javax.swing.JButton jBCadastrarEditora;
    private javax.swing.JButton jBCadastrarObra;
    private javax.swing.JButton jBEditarAluno;
    private javax.swing.JButton jBEditarBibliotecario;
    private javax.swing.JButton jBEditarCategoria;
    private javax.swing.JButton jBEditarEditora;
    private javax.swing.JButton jBEditarObra;
    private javax.swing.JButton jBRecusar;
    private javax.swing.JButton jBRemoverAluno;
    private javax.swing.JButton jBRemoverBibliotecario;
    private javax.swing.JButton jBRemoverCategoria;
    private javax.swing.JButton jBRemoverEditora;
    private javax.swing.JButton jBRemoverLivro;
    private javax.swing.JButton jBRemoverObra;
    private javax.swing.JButton jBVisualizarAluno;
    private javax.swing.JButton jBVisualizarObra;
    private javax.swing.JComboBox<String> jCBAluno;
    private javax.swing.JLabel jLBemVindo;
    private javax.swing.JLabel jLLupaAluno;
    private javax.swing.JLabel jLProcurar1;
    private javax.swing.JLabel jLSair;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane8;
    private javax.swing.JTextField jTFProcurarAluno;
    private javax.swing.JTabbedPane jTPSolicitacoes;
    private javax.swing.JTable jTbAluno;
    private javax.swing.JTable jTbBibliotecario;
    private javax.swing.JTable jTbCategoria;
    private javax.swing.JTable jTbEditora;
    private javax.swing.JTable jTbLivros;
    private javax.swing.JTable jTbObra;
    private javax.swing.JTable jTbSolicitacoes;
    private javax.swing.JLabel livroicon;
    // End of variables declaration//GEN-END:variables
}
