/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Main;

import DAO.BibliotecarioDAO;
import DAO.Conexao;
import DAO.EmprestimoDAO;
import DAO.LivroDAO;
import DAO.ObraDAO;
import static Main.main.identificacao;
import java.awt.Color;
import java.sql.Connection;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import model.Emprestimo;
import model.Livro;
import model.Obra;

/**
 *
 * @author Jorge Lucas
 */
public class TelaAluno extends javax.swing.JFrame {

    /**
     * Creates new form TelaBibliotecario
     */
    public TelaAluno() throws SQLException {
        initComponents();
        configurarBemVindo();
        configurarTabelaLivro();
        inserirNaTabelaLivro();
        inserirNaTabelaEmprestimo();
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane3 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTbLivros = new javax.swing.JTable();
        jBAlugar = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTbEmprestimos = new javax.swing.JTable();
        jBRenovar = new javax.swing.JButton();
        jBDevolver = new javax.swing.JButton();
        jLBemVindo = new javax.swing.JLabel();
        jLSair = new javax.swing.JLabel();
        livroicon = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        jTabbedPane3.setBackground(new java.awt.Color(102, 255, 102));

        jPanel1.setBackground(new java.awt.Color(255, 204, 102));

        jTbLivros.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Título", "Descrição", "Qtd"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jTbLivros);

        jBAlugar.setText("Solicitar");
        jBAlugar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jBAlugar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBAlugarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 541, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(232, 232, 232)
                .addComponent(jBAlugar, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 402, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 33, Short.MAX_VALUE)
                .addComponent(jBAlugar)
                .addGap(30, 30, 30))
        );

        jTabbedPane3.addTab("Livros Disponíveis", jPanel1);

        jPanel2.setBackground(new java.awt.Color(255, 204, 102));

        jTbEmprestimos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Titulo", "Data de Inicio", "Data de Fim", "Bibliotecario"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(jTbEmprestimos);

        jBRenovar.setBackground(new java.awt.Color(255, 255, 255));
        jBRenovar.setText("Renovar");
        jBRenovar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBRenovarActionPerformed(evt);
            }
        });

        jBDevolver.setBackground(new java.awt.Color(255, 255, 255));
        jBDevolver.setText("Devolver");
        jBDevolver.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBDevolverActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGap(98, 98, 98)
                .addComponent(jBDevolver, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jBRenovar, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(94, 94, 94))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 541, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 339, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 54, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jBRenovar, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jBDevolver, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(41, 41, 41))
        );

        jTabbedPane3.addTab("Meus Empréstimos", jPanel2);

        jLBemVindo.setBackground(new java.awt.Color(255, 204, 102));
        jLBemVindo.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLBemVindo.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLBemVindo.setText("Olá Aluno(a) ");
        jLBemVindo.setBorder(javax.swing.BorderFactory.createEtchedBorder(new java.awt.Color(255, 204, 102), new java.awt.Color(255, 204, 102)));

        jLSair.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLSair.setText("Sair");
        jLSair.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jLSair.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLSair.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLSairMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jLSairMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jLSairMouseExited(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                jLSairMouseReleased(evt);
            }
        });

        livroicon.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/open-book.png"))); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane3)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(livroicon)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(96, 96, 96)
                        .addComponent(jLBemVindo, javax.swing.GroupLayout.PREFERRED_SIZE, 224, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(188, 188, 188)
                        .addComponent(jLSair, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLBemVindo, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLSair, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(livroicon, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(9, 9, 9)))
                .addComponent(jTabbedPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 524, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        jTabbedPane3.getAccessibleContext().setAccessibleName("Livros Disponíveis");

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    
    
    
    private void configurarTabelaLivro(){
  
        jTbLivros.getColumnModel().getColumn(0).setPreferredWidth(100);
        jTbLivros.getColumnModel().getColumn(1).setPreferredWidth(300);
        jTbLivros.getColumnModel().getColumn(2).setPreferredWidth(25);
        
        jTbEmprestimos.getColumnModel().getColumn(0).setPreferredWidth(50);
        jTbEmprestimos.getColumnModel().getColumn(1).setPreferredWidth(200);
        jTbEmprestimos.getColumnModel().getColumn(2).setPreferredWidth(100);
        jTbEmprestimos.getColumnModel().getColumn(3).setPreferredWidth(100);
    
    }
    
 
    private void inserirNaTabelaLivroCom(){
      
            
    }
    
    private void inserirNaTabelaEmprestimo() throws SQLException{

        Connection con = Conexao.AbrirConexao();
        EmprestimoDAO bd = new EmprestimoDAO(con);
        List<Emprestimo> lista = new ArrayList<>();
        lista = bd.listarEmprestimoAceitoAluno(main.alunoLogado.getMatricula());
        DefaultTableModel tbm=
                    (DefaultTableModel) jTbEmprestimos.getModel();
        while(tbm.getRowCount() > 0 ){
            tbm.removeRow(0);
        }

        int i=0;
        for(Emprestimo tab : lista){
            Livro l = new LivroDAO(con).receberLivro(tab.getLivro());
            String titutloObra = new ObraDAO(con).receberTituloObra(l.getObra());
            tbm.addRow(new String[i]);
            jTbEmprestimos.setValueAt(tab.getId_emprestimo(), i, 0);
            jTbEmprestimos.setValueAt(titutloObra,i, 1);
            jTbEmprestimos.setValueAt(tab.getDataInicio(), i, 2);
            jTbEmprestimos.setValueAt(tab.getDataTermino(), i, 3);
            jTbEmprestimos.setValueAt(new BibliotecarioDAO(con).receberNomeBibliotecario(tab.getBibliotecario()), i, 4);
            i++;
        }
        Conexao.FehcarConexao(con);
    
        
    }
    
    private void inserirNaTabelaLivro() throws SQLException{
        Connection con = Conexao.AbrirConexao();
        ObraDAO bd = new ObraDAO(con);
        List<Obra> lista = new ArrayList<>();
        lista = bd.listarObra();
        DefaultTableModel tbm=
                    (DefaultTableModel) jTbLivros.getModel();
        while(tbm.getRowCount() > 0 ){
            tbm.removeRow(0);
        }
        int i=0;
        
        for(Obra tab : lista){
            if(new LivroDAO(con).quantidadeLivroDispObra(tab.getId_obra()) > 0){
                tbm.addRow(new String[i]);
                jTbLivros.setValueAt(tab.getTitulo(), i, 0);
                jTbLivros.setValueAt(tab.getDescricaoDaObra(),i, 1);
                jTbLivros.setValueAt(new LivroDAO(con).quantidadeLivroDispObra(tab.getId_obra()), i, 2);
                i++;
            }else{
                continue;
            }
        }
        Conexao.FehcarConexao(con);
    }
    
 
    private void limparTabelaEmprestimo(){
        DefaultTableModel tabela = (DefaultTableModel) jTbEmprestimos.getModel();
        tabela.setNumRows(0);
    }
    private void limparTabelaLivro(){
        DefaultTableModel tabela = (DefaultTableModel) jTbLivros.getModel();
        tabela.setNumRows(0);
    }
    private void configurarBemVindo(){
        jLBemVindo.setText(""+jLBemVindo.getText()+identificacao+"");
    }
    private void jLSairMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLSairMouseReleased

    }//GEN-LAST:event_jLSairMouseReleased

    private void jLSairMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLSairMouseEntered
        jLSair.setForeground(Color.blue);
        jLSair.setText("<html><u>Sair</u>");
    }//GEN-LAST:event_jLSairMouseEntered

    private void jLSairMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLSairMouseExited
        jLSair.setForeground(Color.black);
        jLSair.setText("Sair");
    }//GEN-LAST:event_jLSairMouseExited

    private void jLSairMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLSairMouseClicked
        new telaLogin().setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jLSairMouseClicked

    private void jBAlugarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBAlugarActionPerformed
        if(jTbLivros.getSelectedRowCount() == 0)
            JOptionPane.showMessageDialog(null, "Selecione uma linha",null,JOptionPane.ERROR_MESSAGE);
        else if(jTbLivros.getSelectedRowCount() > 1)
            JOptionPane.showMessageDialog(null, "Selecione apenas uma linha",null,JOptionPane.ERROR_MESSAGE);
        else{
            Connection con = Conexao.AbrirConexao();
            try {
                int obra = new ObraDAO(con).receberIdObra((String)jTbLivros.getValueAt(jTbLivros.getSelectedRow(), 0));
                int  livro = new LivroDAO(con).receberIdLivro(obra);
                
                if(new EmprestimoDAO(con).testarEmprestimoAlunoObra(main.alunoLogado.getMatricula(), obra)){
                    JOptionPane.showMessageDialog(null, "Já solicitou/alugou esse livro",null,JOptionPane.ERROR_MESSAGE);
                }else{
                   new LivroDAO(con).atualizarSituacao(livro, "pedente"); 
                   Emprestimo e = new Emprestimo(livro, main.alunoLogado.getMatricula());
                   new EmprestimoDAO(con).inserirEmprestimo(e);
                   JOptionPane.showMessageDialog(null, "Livro solicitado com sucesso.");
                   inserirNaTabelaLivro(); 
                }
                
             } catch (SQLException ex) {
                Logger.getLogger(TelaBibliotecario.class.getName()).log(Level.SEVERE, null, ex);
            } 
        }
    }//GEN-LAST:event_jBAlugarActionPerformed

    private void jBDevolverActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBDevolverActionPerformed
        if(jTbEmprestimos.getSelectedRowCount() == 0)
            JOptionPane.showMessageDialog(null, "Selecione uma linha",null,JOptionPane.ERROR_MESSAGE);
        else if(jTbEmprestimos.getSelectedRowCount() > 1)
            JOptionPane.showMessageDialog(null, "Selecione apenas uma linha",null,JOptionPane.ERROR_MESSAGE);
        else{
            if(JOptionPane.showConfirmDialog(null,"Deseja devolver esse livro ?") == 0){
                Connection con = Conexao.AbrirConexao();
                try {
                    Emprestimo e = new EmprestimoDAO(con).receberEmprestimo((Integer)jTbEmprestimos.getValueAt(jTbEmprestimos.getSelectedRow(), 0));
                    new LivroDAO(con).atualizarSituacao(e.getLivro(), "disponivel");
                    new EmprestimoDAO(con).removerEmprestimo((Integer)jTbEmprestimos.getValueAt(jTbEmprestimos.getSelectedRow(), 0));
                    JOptionPane.showMessageDialog(null, "Livro devolvido com sucesso.");
                    inserirNaTabelaEmprestimo();
                 } catch (SQLException ex) {
                    Logger.getLogger(TelaBibliotecario.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
          
        }
    }//GEN-LAST:event_jBDevolverActionPerformed

    private void jBRenovarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBRenovarActionPerformed
        if(jTbEmprestimos.getSelectedRowCount() == 0)
            JOptionPane.showMessageDialog(null, "Selecione uma linha",null,JOptionPane.ERROR_MESSAGE);
        else if(jTbEmprestimos.getSelectedRowCount() > 1)
            JOptionPane.showMessageDialog(null, "Selecione apenas uma linha",null,JOptionPane.ERROR_MESSAGE);
        else{
            Connection con = Conexao.AbrirConexao();
            
             try {
                 
                 Emprestimo e = new EmprestimoDAO(con).receberEmprestimo((Integer)jTbEmprestimos.getValueAt(jTbEmprestimos.getSelectedRow(), 0));
                 if (e.isRenovado()){
                     JOptionPane.showMessageDialog(null, "Esse livro já foi renovado",null,JOptionPane.ERROR_MESSAGE);
                 }else{
                    e.setRenovado(true);
                    Date data = e.getDataTermino();
                    long diasEmTime = 86400000;
                    data.setTime(data.getTime() + (15*diasEmTime));
                    e.setDataTermino(data);
   
                    new EmprestimoDAO(con).alterarEmprestimo(e);
                 
                    inserirNaTabelaEmprestimo(); 
                 }
                
                 
             
             
             } catch (SQLException ex) {
                 Logger.getLogger(TelaBibliotecario.class.getName()).log(Level.SEVERE, null, ex);
             }
        }
    }//GEN-LAST:event_jBRenovarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TelaAluno.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TelaAluno.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TelaAluno.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TelaAluno.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new TelaAluno().setVisible(true);
                } catch (SQLException ex) {
                    Logger.getLogger(TelaAluno.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jBAlugar;
    private javax.swing.JButton jBDevolver;
    private javax.swing.JButton jBRenovar;
    private javax.swing.JLabel jLBemVindo;
    private javax.swing.JLabel jLSair;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTabbedPane jTabbedPane3;
    private javax.swing.JTable jTbEmprestimos;
    private javax.swing.JTable jTbLivros;
    private javax.swing.JLabel livroicon;
    // End of variables declaration//GEN-END:variables
}
